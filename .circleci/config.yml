# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1

# Steps to reuse
commands:
  set_workspace:
    steps:
      - run: echo "Trying out workspaces" > Go/echo-output
      - run: ls
      - persist_to_workspace:
          root: Go
          paths:
            - ./*

  get_workspace:
    steps:
      - attach_workspace:
          at: Go

# Enviroments to execute
executors:
  docker-go:
    docker:
      - image: circleci/golang:1.9

jobs:
  create_space:
    docker:
      - image: circleci/golang:1.9
    steps:
      - checkout
      - run: echo "Create workspace test"
      - run: echo "Trying out workspaces" > Go/echo-output
      - run: ls
      - set_workspace

  test_space:
    docker:
      - image: circleci/golang:1.9
    steps:
      - checkout
      - run: echo "Attach workspace test"
      - get_workspace
      - run: ls Go
      - run: cat Go/echo-output
  
  build_application:
    executor: docker-go
    steps:
      - checkout
      - run: echo "Building application"
      - run: echo $PKTEST

workflows:
  version: 2.1
  flow_one:
    jobs:
      - create_space
      - test_space:
          requires:
            - create_space

  flow_two:
    jobs:
      - build_application:
          context: CiTest

  programmed:
    triggers:
      - schedule:
          cron: "30 19 * * *" # Ejecutarlo a las 7:30 de la tarde todos los dias (minutos, horas, dia del mes (1,31), mes (1,12), dia de la semana (0 (domingo),6))
          filters:
            branches:
              only:
                - master
                - ciworkspace-test
    jobs:
      - create_space